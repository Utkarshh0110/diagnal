{"version":3,"file":"static/js/368.871e4c0c.chunk.js","mappings":"2LAKA,MA6CA,EA7CuBA,IAAwB,IAAvB,MAAEC,EAAK,OAAEC,GAAQF,EACvC,MAAOG,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAChCC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAYC,IAAiBJ,EAAAA,EAAAA,UAAS,GACvCK,GAAWC,EAAAA,EAAAA,MACXC,GAAOC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMF,OACpCG,GAAaF,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,aAC1CC,GAAaH,EAAAA,EAAAA,KAAaC,GAAUA,EAAME,cAEhDC,EAAAA,EAAAA,YAAU,KACUC,WAChBd,GAAW,GACX,MAAMe,EAAMlB,EAAMO,GACZY,QAAiBC,MAAMF,IACvB,KAAEG,SAAeF,EAASG,OAC1BX,EAAOU,EAAK,iBAA0B,QAC5CZ,GAASc,EAAAA,EAAAA,IAAYZ,IACrBL,EAAWe,EAAK,wBAA0BA,EAAK,uBAC/ClB,GAAW,EAAM,EAEnBqB,EAAW,GACV,CAACjB,IAEJ,MAAMkB,EAAuBR,UAC3B,IAEIS,OAAOC,YAAcC,SAASC,gBAAgBC,UAAY,GAC1DF,SAASC,gBAAgBE,eAEzB5B,GAAW,GACXE,GAAWG,GAAewB,GAASA,EAAO,IAE9C,CAAE,MAAOC,GACPC,QAAQC,IAAIF,EACd,GAQF,OALAjB,EAAAA,EAAAA,YAAU,KACRU,OAAOU,iBAAiB,SAAUX,GAC3B,IAAMC,OAAOW,oBAAoB,SAAUZ,KACjD,KAEIa,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SAAGvC,EAAOa,EAAYH,EAAMI,IAAe,C","sources":["Components/InfiniteScroll.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Cards from \"./Cards\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { dataFromApi } from \"../redux/actions\";\r\n\r\nconst InfiniteScroll = ({ urlFn, render }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const dispatch = useDispatch();\r\n  const data = useSelector((state) => state.data);\r\n  const searchTerm = useSelector((state) => state.searchTerm);\r\n  const filterData = useSelector((state) => state.filterData);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const url = urlFn(pageNumber);\r\n      const response = await fetch(url);\r\n      const { page } = await response.json();\r\n      const data = page[\"content-items\"][\"content\"];\r\n      dispatch(dataFromApi(data));\r\n      setHasMore(page[\"page-size-requested\"] == page[\"page-size-returned\"]);\r\n      setLoading(false);\r\n    };\r\n    fetchData();\r\n  }, [pageNumber]);\r\n\r\n  const handelInfiniteScroll = async () => {\r\n    try {\r\n      if (\r\n        window.innerHeight + document.documentElement.scrollTop + 1 >=\r\n        document.documentElement.scrollHeight\r\n      ) {\r\n        setLoading(true);\r\n        hasMore && setPageNumber((prev) => prev + 1);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", handelInfiniteScroll);\r\n    return () => window.removeEventListener(\"scroll\", handelInfiniteScroll);\r\n  }, []);\r\n\r\n  return <>{render(searchTerm, data, filterData)}</>;\r\n};\r\n\r\nexport default InfiniteScroll;\r\n"],"names":["_ref","urlFn","render","loading","setLoading","useState","hasMore","setHasMore","pageNumber","setPageNumber","dispatch","useDispatch","data","useSelector","state","searchTerm","filterData","useEffect","async","url","response","fetch","page","json","dataFromApi","fetchData","handelInfiniteScroll","window","innerHeight","document","documentElement","scrollTop","scrollHeight","prev","error","console","log","addEventListener","removeEventListener","_jsx","_Fragment","children"],"sourceRoot":""}